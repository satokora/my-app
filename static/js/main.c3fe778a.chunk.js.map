{"version":3,"sources":["Util/Constants.js","Components/SideBar.js","Pages/Language.js","Pages/Topic.js","Components/Content.js","Components/FeatureDiscovery.js","App.js","serviceWorker.js","index.js"],"names":["API","SideBar","props","state","bio","name","avatar","location","repos","followers","following","homeUrl","notFound","activePage","url","Constants","fetch","then","res","json","data","setState","username","login","avatar_url","public_repos","html_url","message","catch","error","console","log","JSON","stringify","currPage","this","fetchProfile","id","className","class","data-position","data-tooltip","href","src","lass","target","icon","faLinkedin","size","faEnvelope","onClick","setActive","to","data-target","Component","Language","langs","tags","tagArray","lang","i","cards","document","getElementsByClassName","length","dataset","language","includes","style","display","compare","index","langArray","lngArray","uniqueItems","commaLangs","commaLangArray","languages_url","key","hasOwnProperty","push","Array","from","Set","fetchLangRepos","type","hidden","defaultChecked","map","tabindex","filterByLanguage","item","data-language","findLang","description","Topic","topics","filters","topic","commaTopics","commaTopicArray","topicsArray","uniqueTopics","query","method","headers","body","r","nodes","repository","repositoryTopics","edges","node","fetchTopicRepos","val","filterByTopic","data-topic","findTopic","Content","exact","path","component","FeatureDiscovery","e","preventDefault","faReact","faNodeJs","faGithub","App","fetchLinkedinProfile","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3fe778a.chunk.js","sourcesContent":["export const API='https://api.github.com/users';\nexport const GITHUB_GRAPHQL_API = 'https://api.github.com/graphql';\nexport const USER_NAME='satokora';\nexport const AUTHORIZATION_KEY='Bearer 19b29ef6e87180e12a5fcac2c5217b0b6e44e54b';","import React, {Component} from 'react';\nimport './SideBar.css';\n//import avatar from './images/11066361.jpeg'; \nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { Link , BrowserRouter as Router } from 'react-router-dom';\nimport * as Constants from '../Util/Constants';\n\n//const API=\"https://api.github.com/users\";\nclass SideBar extends Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            bio:\"\",\n           // username: 'satokora',\n      name:'',\n      avatar:'',\n      location:'',\n      repos:'',\n      followers: '',\n      following:'',\n      homeUrl:'',\n      notFound:'',\n      activePage: 'language'\n        };\n    }\n    fetchProfile() { \n        let url = `${Constants.API}/${Constants.USER_NAME}`;\n        fetch(url)\n          .then((res) => res.json() )\n          .then((data) => {\n            this.setState({\n              username: data.login,\n              name: data.name,\n              avatar: data.avatar_url,\n              location: data.location,\n              repos: data.public_repos,\n              followers: data.followers,\n              following: data.following,\n              homeUrl: data.html_url,\n              notFound: data.message,\n              bio:data.bio\n            })\n          })\n          .catch((error) => console.log(JSON.stringify(error)) )\n      }\n      setActive(currPage) {\n        this.setState(\n            {\n                activePage: currPage\n            }\n        )\n      }\n    async componentDidMount() {\n        this.fetchProfile();\n        \n        \n      }\n\n    render(){\n       \n        return(\n            <div>\n            \n            <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\">\n                <li>\n                <hr/>\n                    <div className=\"user-view amber lighten-5 center\">\n                    \n                        <div className=\"background\">\n                        </div>\n                        <a class=\"tooltipped\" data-position=\"right\" data-tooltip=\"Thank you for visiting my page!\" href=\"#user\"><img className=\"circle\" src={this.state.avatar} /></a>\n                        <h6>{this.state.name}<br/><span lass=\"lang-ja\"><ruby>高<rt>こう</rt>良<rt>ら</rt>智<rt>さと</rt>子<rt>こ</rt></ruby></span></h6>\n                        \n                        <a target=\"_blank\" href=\"https://linkedin.com/in/satoko-kora-223aa380\"><FontAwesomeIcon icon={faLinkedin}  size=\"lg\" /></a>&nbsp;\n                        <a href=\"mailto:satokorambxl@gmail.com\"><FontAwesomeIcon icon={faEnvelope}  size=\"lg\" /></a>\n                        \n                    </div>\n                    <hr/>\n                    <div className=\"card\">\n                        <div className=\"card-content white-text\">\n                            <p>{this.state.bio}</p>\n                        </div>\n                    </div>\n                </li>\n               \n                <ul class=\"collection with-header\">\n                <li  class=\"collection-header\">\n                <a  className=\"subheader white-text\" href=\"#!\">\n                <b>My Github Repositories</b></a>\n                </li>\n             \n                \n                <li className={this.state.activePage==\"language\" ? 'collection-item active': 'collection-item'} >\n                <Link className=\"waves-effect\" onClick={()=>this.setActive(\"language\")} to=\"/language\">By Language</Link>\n                </li>\n                <li className={this.state.activePage==\"topic\" ? 'collection-item active': 'collection-item'}>\n                <Link className=\"waves-effect\" onClick={()=>this.setActive(\"topic\")} to=\"/topic\">By Topic</Link>\n                </li>\n                <li className={this.state.activePage==\"timeline\" ? 'collection-item active': 'collection-item'}>\n                <Link className=\"waves-effect\" onClick={()=>this.setActive(\"timeline\")} to=\"/timeline\">By Timeline</Link>\n                </li>\n                </ul>\n            </ul>\n         \n\n            <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n            \n            \n\n            </div> \n\n        );\n    }\n}\n\nexport default SideBar;","import React, {Component} from 'react';\nimport * as Constants from '../Util/Constants';\n\n\nclass Language extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            repos:[],\n            langs:[],\n            tags:[],\n            tagArray:[]\n        };\n    }\n    filterByLanguage(lang)\n    {\n        console.log(lang);\n        var cards = document.getElementsByClassName('repo-card');\n\n        var i;\n        for (i = 0; i < cards.length; i++) {\n            \n            if (cards[i].dataset.language && cards[i].dataset.language.includes(\",\" + lang))\n            {\n                cards[i].style.display = 'block';\n                console.log(cards[i].dataset.language);\n            }\n            else\n            {\n                cards[i].style.display = 'none';\n            }\n        }\n\n    }\n\n    checkTag(lang, compare) {\n    return lang == compare;\n    }\n    findLang(index) {\n    return this.state.langArray?this.state.langArray[index]:null;\n    }\n    fetchLangRepos() { \n        let url = `${Constants.API}/${Constants.USER_NAME}/repos`;\n        fetch(url)\n          .then((res) => res.json() )\n          .then((data) => {\n            this.setState({\n              username: data.login,\n              name: data.name,\n              avatar: data.avatar_url,\n              location: data.location,\n              repos: data,\n              followers: data.followers,\n              following: data.following,\n              homeUrl: data.html_url,\n              notFound: data.message,\n              bio:data.bio\n            });\n\n            var lngArray=[];\n            var uniqueItems = [];\n            var commaLangs=\"\";\n            var commaLangArray=[];\n            \n            for (var i=0; i < data.length; i++) {\n               \n                fetch(data[i].languages_url)\n                .then((res) => res.json() )\n                .then((langs) => {\n                   var lgs=[];\n                    for (var key in langs) {\n                        \n                        \n                        if (langs.hasOwnProperty(key)) {  \n                            lngArray.push(key);\n                            commaLangs+=\",\" + key;\n                           \n                           \n                            uniqueItems = Array.from(new Set(lngArray));\n                        }\n                    }\n                    \n                    commaLangArray.push(commaLangs);\n                    commaLangs=\"\";\n                    \n                    \n                    this.setState({ \n                        langArray:commaLangArray,\n                        langs:uniqueItems\n                       });\n\n                    \n                })\n            .catch((error) => console.log(JSON.stringify(error)));\n        }\n      }).catch((error) => console.log(JSON.stringify(error)) )\n      }\n        async componentDidMount() {\n            this.fetchLangRepos();\n            \n        }\n    render() {\n        return (\n          <div id=\"content\">\n            <div className=\"filter\">\n                <input type=\"radio\" id=\"tag-0\" className=\"filter-tag\" name=\"filter-radio\" hidden defaultChecked />\n                {this.state.langs.map((lang,index) => (\n                    <input type=\"radio\" id={\"tag-\"+(index+1)} className=\"filter-tag\" name=\"filter-radio\" key={index} hidden />\n                ))}\n            \n                <div className=\"filter-nav\">\n                    \n                    {this.state.langs.map((lang,index) => (\n                        <div className=\"chip\" tabindex={(index+1)}  onClick={() => { this.filterByLanguage(lang)} } >{lang}</div>\n                    ))}\n                </div>\n\n                <div className=\"filter-body\">\n                    <div className=\"filter-body\">\n                    <div class=\"row\">\n                        <div className=\"columns\">\n                        {this.state.repos.map((item,index) => (\n                            <div class=\"col s12 m6\">\n                                <div class=\"card repo-card blue-grey darken-1\" data-language={this.findLang(index)}>\n                                    <div class=\"card-content white-text\">\n                                        <a href={item.html_url}><span class=\"card-title orange-text text-lighten-2\">{item.name}</span></a>\n                                        <p>{item.description}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default Language;","import React, {Component} from 'react';\nimport * as Constants from '../Util/Constants';\n\n\nclass Topic extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            repos:[],\n            topics:[],\n            filters:[],\n        };\n    }\n    filterByTopic(topic)\n    {\n        \n        var cards = document.getElementsByClassName('card');\n\n        var i;\n        for (i = 0; i < cards.length; i++) {\n            \n            if (cards[i].dataset.topic && cards[i].dataset.topic.includes(\",\" + topic))\n            {\n                cards[i].style.display = 'block';\n                console.log(cards[i].dataset.topic);\n            }\n            else\n            {\n                cards[i].style.display = 'none';\n            }\n        }\n\n    }\n\n    findTopic(index) {\n    return this.state.topics?this.state.topics[index]:null;\n    }\n    fetchTopicRepos()\n    {\n        let url = `${Constants.API}/${Constants.USER_NAME}/repos`;\n\n        fetch(url)\n          .then((res) => res.json() )\n          .then((data) => {\n            this.setState({\n              username: data.login,\n              name: data.name,\n              avatar: data.avatar_url,\n              location: data.location,\n              repos: data,\n              followers: data.followers,\n              following: data.following,\n              homeUrl: data.html_url,\n              notFound: data.message,\n              bio:data.bio\n            });\n\n            var commaTopics=\"\";\n            var commaTopicArray=[];\n            var topicsArray=[];\n            var uniqueTopics= [];\n            \n            for (var i=0; i < data.length; i++) {\n                var query = `{\n                    repository(owner: \"${Constants.USER_NAME}\", name: \"${data[i].name}\") {\n                    repositoryTopics(first: 10) {\n                        edges {\n                        node {\n                            topic {\n                            name\n                            }\n                        }\n                        }\n                    }\n                    }\n                }`;\n           \n            fetch(Constants.GITHUB_GRAPHQL_API, {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Constants.AUTHORIZATION_KEY,\n                'Accept': 'application/json',\n                },\n                body: JSON.stringify({\n                query\n                })\n            })\n            .then(r => r.json())\n            .then(data =>{\n\n                var nodes = data.data.repository.repositoryTopics.edges;\n\n                if(nodes.length>0)\n                {\n                    for (var i=0; i < nodes.length; i++) {\n                        topicsArray.push(nodes[i].node.topic.name);\n                         console.log(nodes[i].node.topic.name);\n                         commaTopics+=\",\" + nodes[i].node.topic.name;\n                    }\n                   \n                }\n\n                commaTopicArray.push(commaTopics);\n                commaTopics=\"\";\n\n                uniqueTopics = Array.from(new Set(topicsArray));\n\n                this.setState({ \n                    topics:commaTopicArray,\n                    filters:uniqueTopics\n                });\n            } );\n        }\n      }).catch((error) => console.log(JSON.stringify(error)) )\n        \n    }\n    async componentDidMount() {\n        this.fetchTopicRepos();\n        \n      }\n    render() {\n        return (\n          <div id=\"content\">\n          <div className=\"filter\">\n                <input type=\"radio\" id=\"tag-0\" className=\"filter-tag\" name=\"filter-radio\" hidden defaultChecked />\n                {this.state.filters.map((val,index) => (\n                    <input type=\"radio\" id={\"tag-\"+(index+1)} className=\"filter-tag\" name=\"filter-radio\" key={index} hidden />\n                ))}\n            \n                <div className=\"filter-nav\">\n                    \n                    {this.state.filters.map((topic,index) => (\n                        <div className=\"chip\" tabindex={(index+1)}  onClick={() => { this.filterByTopic(topic)} } >{topic}</div>\n                    ))}\n                </div>\n            \n\n                <div className=\"filter-body\">\n                    <div className=\"filter-body\">\n                    <div class=\"row\">\n                        <div className=\"columns\">\n                        {this.state.repos.map((item,index) => (\n                            <div class=\"col s12 m6\">\n                                <div class=\"card blue-grey darken-1\" data-topic={this.findTopic(index-1)}>\n                                    <div class=\"card-content white-text\">\n                                        <a href={item.html_url}><span class=\"card-title orange-text text-lighten-2\">{item.name}</span></a>\n                                        <p>{item.description}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n          </div>\n        );\n      }\n}\n\nexport default Topic;","import React, {Component} from 'react';\nimport './Content.css';\nimport Language from '../Pages/Language';\nimport Topic from '../Pages/Topic';\nimport { Switch, Route, Redirect, BrowserRouter as Router } from 'react-router-dom';\n\nclass Content extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          username: 'satokora',\n          src: 'https://www.linkedin.com/in/satokokora/'\n      };\n    }\n    render(){\n        return(\n            <div>\n              <Switch>\n                  <Route exact path=\"/Language\" component={Language} />\n                  <Route exact path=\"/\">\n                    <Redirect to=\"/Language\" />\n                  </Route>\n                  <Route exact path=\"/Topic\" component={Topic} />\n              </Switch>\n            </div>\n        );\n    }\n}\nexport default Content;","\nimport React, {Component} from 'react';\nimport $ from \"jquery\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReact, faGithub, faNodeJs } from '@fortawesome/free-brands-svg-icons';\n\nclass FeatureDiscovery extends Component{\n    constructor(props){\n        super(props);\n    }\n    componentDidMount() {\n        \n      }\n     handleClick(e) {\n        e.preventDefault();\n        console.log('The link was clicked.');\n      }\n    render()\n    {\n        return(\n        \n        <div class=\"fixed-action-btn\">\n            <a class=\"btn-floating btn-large teal darken-3 tooltipped\" data-position=\"left\" data-tooltip=\"This page is developed with...\">\n              <i class=\"large material-icons\">build</i>\n            </a>\n            <ul>\n              <li><a class=\"btn-floating blue tooltipped\" data-position=\"left\" data-tooltip=\"React\" href=\"https://reactjs.org/\" target=\"_blank\"><FontAwesomeIcon icon={faReact}  size=\"lg\" /></a></li>\n              <li><a class=\"btn-floating green tooltipped\" data-position=\"left\" data-tooltip=\"Node.js\" href=\"https://nodejs.org/en/\" target=\"_blank\"><FontAwesomeIcon icon={faNodeJs}  size=\"lg\" /></a></li>\n              <li><a class=\"btn-floating black tooltipped\" data-position=\"left\" data-tooltip=\"Github API\" href=\"https://docs.github.com/en/rest\" target=\"_blank\"><FontAwesomeIcon icon={faGithub}  size=\"lg\" /></a></li>\n              <li><a class=\"btn-floating white tooltipped\" data-position=\"left\" data-tooltip=\"Materialize\" href=\"https://materializecss.com/\" target=\"_blank\">\n              <img src=\"https://materializecss.com/images/favicon/favicon-32x32.png\" />\n              \n              </a></li>\n            </ul>\n        </div>\n        )\n    }\n}\n\nexport default FeatureDiscovery;","import React, { Component } from 'react';\nimport './App.css';\nimport SideBar from \"./Components/SideBar\";\nimport Content from \"./Components/Content\";\nimport FeatureDiscovery from \"./Components/FeatureDiscovery\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {Routes} from './Util/Routes';\n\n//const API=\"https://api.github.com/users\";\nclass App extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      username: 'satokora',\n      src: 'https://www.linkedin.com/in/satokokora/'\n  };\n  }\n  fetchLinkedinProfile(username) { \n  }\n  async componentDidMount() {\n    this.fetchLinkedinProfile(this.state.username);\n    \n  }\nrender(){\n  return (\n    <div className=\"App\">\n    <Router>\n        <div className=\"off-canvas off-canvas-sidebar-show\">\n            <SideBar></SideBar>\n            <div className=\"off-canvas-content\">\n              <div className=\"docs-content\">\n                <div className=\"container\">\n                  <Content></Content>\n                  <FeatureDiscovery></FeatureDiscovery>\n                </div>\n              </div>\n          </div>\n      </div>\n    </Router>\n    </div>\n      \n    \n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n<App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}