{"version":3,"sources":["Constants.js","SideBar.js","Language.js","Content.js","FeatureDiscovery.js","App.js","serviceWorker.js","index.js"],"names":["API","SideBar","props","state","bio","name","avatar","location","repos","followers","following","homeUrl","notFound","url","Constants","fetch","then","res","json","data","setState","username","login","avatar_url","public_repos","html_url","message","catch","error","console","log","JSON","stringify","this","fetchProfile","id","className","class","data-position","data-tooltip","href","src","lass","target","icon","faLinkedin","size","faEnvelope","data-target","Component","Language","langs","tags","repoArray","tagArray","lang","compare","index","langArray","lngArray","uniqueItems","commaLangs","commaLangArray","i","length","push","languages_url","key","hasOwnProperty","Array","from","Set","fetchLangRepos","type","hidden","defaultChecked","map","tabindex","item","data-language","findLang","description","Content","FeatureDiscovery","e","preventDefault","faReact","faNodeJs","faGithub","App","fetchLinkedinProfile","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17e54d9b.chunk.js","sourcesContent":["export const API='https://api.github.com/users';\nexport const USER_NAME='satokora';","import React, {Component} from 'react';\nimport './SideBar.css';\n//import avatar from './images/11066361.jpeg'; \nimport Alert from 'react-bootstrap/Alert';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport * as Constants from './Constants';\n\n//const API=\"https://api.github.com/users\";\nclass SideBar extends Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            bio:\"\",\n           // username: 'satokora',\n      name:'',\n      avatar:'',\n      location:'',\n      repos:'',\n      followers: '',\n      following:'',\n      homeUrl:'',\n      notFound:''\n        };\n    }\n    fetchProfile() { \n        let url = `${Constants.API}/${Constants.USER_NAME}`;\n        fetch(url)\n          .then((res) => res.json() )\n          .then((data) => {\n            this.setState({\n              username: data.login,\n              name: data.name,\n              avatar: data.avatar_url,\n              location: data.location,\n              repos: data.public_repos,\n              followers: data.followers,\n              following: data.following,\n              homeUrl: data.html_url,\n              notFound: data.message,\n              bio:data.bio\n            })\n          })\n          .catch((error) => console.log(JSON.stringify(error)) )\n      }\n    async componentDidMount() {\n        this.fetchProfile();\n        \n        \n      }\n\n    render(){\n        //let data = this.bio;\n        return(\n            <div>\n            {/* <nav> \n            </nav> */}\n            <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\">\n                <li>\n                <hr/>\n                    <div className=\"user-view amber lighten-5 center\">\n                    \n                        <div className=\"background\">\n                        </div>\n                        <a class=\"tooltipped\" data-position=\"right\" data-tooltip=\"Thank you for visiting my page!\" href=\"#user\"><img className=\"circle\" src={this.state.avatar} /></a>\n                        <h6>{this.state.name}<br/><span lass=\"lang-ja\"><ruby>高<rt>こう</rt>良<rt>ら</rt>智<rt>さと</rt>子<rt>こ</rt></ruby></span></h6>\n                        {/* <a href=\"#name\"><span className=\"white-text name\">{this.state.name}</span></a> */}\n                        <a target=\"_blank\" href=\"https://linkedin.com/in/satoko-kora-223aa380\"><FontAwesomeIcon icon={faLinkedin}  size=\"lg\" /></a>&nbsp;\n                        <a href=\"mailto:satokorambxl@gmail.com\"><FontAwesomeIcon icon={faEnvelope}  size=\"lg\" /></a>\n                        \n                    </div>\n                    <hr/>\n                    <div className=\"card\">\n                        <div className=\"card-content white-text\">\n                            <p>{this.state.bio}</p>\n                        </div>\n                    </div>\n                </li>\n                <li><div className=\"divider\"></div></li>\n                <li><a  className=\"subheader\" href=\"#!\"><i className=\"material-icons\">folder_open</i>My Github Repositories</a></li>\n                {/* <li><div className=\"divider\"></div></li> */}\n                {/* <li><a className=\"subheader\">Subheader</a></li> */}\n                <li><a className=\"waves-effect\" href=\"#!\">By Language</a></li>\n                <li><a className=\"waves-effect\" href=\"#!\">By Topic</a></li>\n                <li><a className=\"waves-effect\" href=\"#!\">By Timeline</a></li>\n                <li className=\"bold\"><a className=\"collapsible-header waves-effect waves-teal\">JavaScript</a>\n              <div className=\"collapsible-body\">\n                <ul>\n                  <li><a href=\"auto-init.html\">Auto Init</a></li>\n                  <li><a href=\"carousel.html\">Carousel</a></li>\n                  <li><a href=\"collapsible.html\">Collapsible</a></li>\n                  <li><a href=\"dropdown.html\">Dropdown</a></li>\n                  <li><a href=\"feature-discovery.html\">FeatureDiscovery</a></li>\n                  <li><a href=\"media.html\">Media</a></li>\n                  <li><a href=\"modals.html\">Modals</a></li>\n                  <li><a href=\"parallax.html\">Parallax</a></li>\n                  <li><a href=\"pushpin.html\">Pushpin</a></li>\n                  <li><a href=\"scrollspy.html\">Scrollspy</a></li>\n                  <li><a href=\"sidenav.html\">Sidenav</a></li>\n                  <li><a href=\"tabs.html\">Tabs</a></li>\n                  <li><a href=\"toasts.html\">Toasts</a></li>\n                  <li><a href=\"tooltips.html\">Tooltips</a></li>\n                  <li><a href=\"waves.html\">Waves</a></li>\n                </ul>\n              </div>\n            </li>\n            </ul>\n\n            <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n            \n            \n            {/* <!-- off-screen toggle button --> */}\n            {/* <a className=\"off-canvas-toggle btn btn-primary btn-action\" href=\"#sidebar-id\">\n                <i className=\"icon icon-menu\"></i>\n            </a>\n\n            <div id=\"sidebar-id\" className=\"off-canvas-sidebar\">\n                <div>\n                <hr/>\n                    <div className=\"profile-photo\">\n                        <img className=\"s-circle\" width=\"30%\" alt=\"avatar\" src={this.state.avatar} />\n                        <h5>{this.state.name}<br/><span lass=\"lang-ja\"><ruby>高<rt>こう</rt>良<rt>ら</rt>智<rt>さと</rt>子<rt>こ</rt></ruby></span></h5>\n                        <a target=\"_blank\" href=\"https://linkedin.com/in/satoko-kora-223aa380\"><FontAwesomeIcon icon={faLinkedin}  size=\"lg\" /></a>&nbsp;\n                        <a href=\"mailto:satokorambxl@gmail.com\"><FontAwesomeIcon icon={faEnvelope}  size=\"lg\" /></a>\n                    </div>\n                    <hr/>\n\n                </div>\n                <div className=\"tile\">\n                    <div className=\"tile-content\">\n                    <Alert variant=\"info\">\n                    {this.state.bio}\n                    </Alert>\n                        <p></p>\n                        \n                    </div>\n\n                </div>\n                <div>\n                <ul className=\"nav\">\n                    <li className=\"nav-item active\">\n                        <a href=\"#\">My Github Repositories</a>\n                        <ul className=\"nav\">\n                            <li className=\"nav-item\">\n                                <a href=\"#\">By Language</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#\">By Topic</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#\">By Timeline</a>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n                    \n                </div>\n\n                    \n            </div>\n\n            <a className=\"off-canvas-overlay\" href=\"#close\"></a>*/}\n\n            </div> \n\n        );\n    }\n}\n\nexport default SideBar;","import React, {Component} from 'react';\nimport * as Constants from './Constants';\n\n//const API=\"https://api.github.com/users\";\nclass Language extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            repos:[],\n            langs:[],\n            tags:[],\n            repoArray:[],\n            tagArray:[]\n        };\n    }\n    \n\n    checkTag(lang, compare) {\n    return lang == compare;\n    }\n     findLang(index) {\n        return this.state.langArray?this.state.langArray[index]:null;\n      }\n    fetchLangRepos() { \n        let url = `${Constants.API}/${Constants.USER_NAME}/repos`;\n        fetch(url)\n          .then((res) => res.json() )\n          .then((data) => {\n            this.setState({\n              username: data.login,\n              name: data.name,\n              avatar: data.avatar_url,\n              location: data.location,\n              repos: data,\n              followers: data.followers,\n              following: data.following,\n              homeUrl: data.html_url,\n              notFound: data.message,\n              bio:data.bio\n            });\n            var lngArray=[];\n            var uniqueItems = [];\n            var repoArray=[];\n            var commaLangs=\"\";\n            var commaLangArray=[];\n            //var tagArray=[];\n            for (var i=0; i < data.length; i++) {\n                repoArray.push(data[i].id);\n                fetch(data[i].languages_url)\n                .then((res) => res.json() )\n                .then((langs) => {\n                   var lgs=[];\n                    for (var key in langs) {\n                        \n                        // check if the property/key is defined in the object itself, not in parent\n                        if (langs.hasOwnProperty(key)) {  \n                            lngArray.push(key);\n                            commaLangs+=\",\" + key;\n                           \n                            //lgs.push(key);\n                            uniqueItems = Array.from(new Set(lngArray));\n                        }\n                    }\n                    console.log(commaLangs);\n                    commaLangArray.push(commaLangs);\n                    commaLangs=\"\";\n                    \n                    \n                    this.setState({ \n                        langArray:commaLangArray,\n                        langs:uniqueItems\n                       });\n\n                    //    this.setState(prevState => {\n                    //     let repoLangs = Object.assign({}, prevState.jasper);  // creating copy of state variable jasper\n                    //     jasper.name = 'someothername';                     // update the name property, assign a new value                 \n                    //     return { jasper };                                 // return new object jasper object\n                    //   })\n                    \n                })\n            .catch((error) => console.log(JSON.stringify(error)));\n        }\n      }).catch((error) => console.log(JSON.stringify(error)) )\n      }\n    async componentDidMount() {\n        this.fetchLangRepos();\n        \n      }\n    render() {\n        return (\n          <div id=\"content\">\n            <div className=\"filter\">\n                <input type=\"radio\" id=\"tag-0\" className=\"filter-tag\" name=\"filter-radio\" hidden defaultChecked />\n                {this.state.langs.map((lang,index) => (\n                    <input type=\"radio\" id={\"tag-\"+(index+1)} className=\"filter-tag\" name=\"filter-radio\" key={index} hidden />\n                ))}\n            \n                <div className=\"filter-nav\">\n                    \n                    {this.state.langs.map((lang,index) => (\n                        /* <div className=\"chip\" htmlFor={\"tag-\"+(index+1)} key={index}>{lang}</div> */\n                        <div className=\"chip\" tabindex={(index+1)} >{lang}</div>\n                    ))}\n                </div>\n\n                <div className=\"filter-body\">\n                    <div className=\"filter-body\">\n                    <div class=\"row\">\n    \n  \n                        <div className=\"columns\">\n                        {this.state.repos.map((item,index) => (\n                            <div class=\"col s12 m6\">\n                            <div class=\"card blue-grey darken-1\" data-language={this.findLang(index)}>\n                                <div class=\"card-content white-text\">\n                                <a href={item.html_url}><span class=\"card-title orange-text text-lighten-2\">{item.name}</span></a>\n                                <p>{item.description}</p>\n                                </div>\n                                {/* <div class=\"card-action\">\n                                <a href=\"#\">This is a link</a>\n                                <a href=\"#\">This is a link</a>\n                                </div> */}\n                            </div>\n                            </div>\n                            /* <div className=\"column col-6 filter-item\" data-tag={\"tag-\"+(this.state.tags[index]+1)} key={index}>\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                    <div className=\"card-title text-bold\"><a href={item.html_url}>{item.name}</a></div>\n                                    <div className=\"card-subtitle text-gray\">{item.description}</div>\n                                    </div>\n                                </div>\n                            </div> */\n                        \n                        ))}\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default Language;","import React, {Component} from 'react';\nimport './Content.css';\nimport Language from './Language';\n\nclass Content extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          username: 'satokora',\n          src: 'https://www.linkedin.com/in/satokokora/'\n      };\n    }\n    render(){\n        return(\n            <div>\n            <Language></Language>\n            {/* <div id=\"content\">\n                 <Language></Language> \n                <div className=\"filter\">\n                <input type=\"radio\" id=\"tag-0\" className=\"filter-tag\" name=\"filter-radio\" hidden checked />\n                <input type=\"radio\" id=\"tag-1\" className=\"filter-tag\" name=\"filter-radio\" hidden />\n                <input type=\"radio\" id=\"tag-2\" className=\"filter-tag\" name=\"filter-radio\" hidden />\n\n                <div className=\"filter-nav\">\n                    <label className=\"chip\" for=\"tag-0\">All</label>\n                    <label className=\"chip\" for=\"tag-1\">Action</label>\n                    <label className=\"chip\" for=\"tag-2\">Roleplaying</label>\n                </div>\n\n                <div className=\"filter-body\">\n                <div className=\"filter-body\">\n                <div className=\"columns\">\n                    <div className=\"column col-6 filter-item\" data-tag=\"tag-2\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                          <div className=\"card-title text-bold\">Halo 5</div>\n                          <div className=\"card-subtitle text-gray\">Shooter</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"column col-6 filter-item\" data-tag=\"tag-3\">\n                      <div className=\"card\">\n                        <div className=\"card-header\">\n                          <div className=\"card-title text-bold\">Halo 5</div>\n                          <div className=\"card-subtitle text-gray\">Shooter</div>\n                        </div>\n                      </div>\n                    </div>\n                    \n\n                    <div className=\"column col-6 filter-item\" data-tag=\"tag-1\">\n                      <div className=\"card\">\n                        <div className=\"card-header\">\n                          <div className=\"card-title text-bold\">Quantum Break</div>\n                          <div className=\"card-subtitle text-gray\">Action</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"column col-6 filter-item\" data-tag=\"tag-4\">\n                      <div className=\"card\">\n                        <div className=\"card-header\">\n                          <div className=\"card-title text-bold\">Forza Horizon 3</div>\n                          <div className=\"card-subtitle text-gray\">Sports</div>\n                        </div>\n                      </div>\n                    </div>\n                    </div>\n                </div>    \n\n                    \n                </div>\n                </div>\n                \n            </div> */}\n            </div>\n        );\n    }\n}\nexport default Content;","// const { Component } = require(\"react\");\n\nimport React, {Component} from 'react';\nimport $ from \"jquery\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReact, faGithub, faNodeJs } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nclass FeatureDiscovery extends Component{\n    constructor(props){\n        super(props);\n    }\n    componentDidMount() {\n        \n      }\n     handleClick(e) {\n        e.preventDefault();\n        console.log('The link was clicked.');\n        //document.querySelector('.tap-target').tapTarget('open'); \n        //var instance = M.TapTarget.getInstance(e);\n        //e.open();\n        //$('.tap-target').tapTarget('open');\n      }\n    render()\n    {\n        return(\n        \n        <div class=\"fixed-action-btn\">\n            <a class=\"btn-floating btn-large teal darken-3 tooltipped\" data-position=\"left\" data-tooltip=\"This page is developed with...\">\n              <i class=\"large material-icons\">build</i>\n            </a>\n            <ul>\n              <li><a class=\"btn-floating blue tooltipped\" data-position=\"left\" data-tooltip=\"React\" href=\"https://reactjs.org/\" target=\"_blank\"><FontAwesomeIcon icon={faReact}  size=\"lg\" /></a></li>\n              <li><a class=\"btn-floating green tooltipped\" data-position=\"left\" data-tooltip=\"Node.js\" href=\"https://nodejs.org/en/\" target=\"_blank\"><FontAwesomeIcon icon={faNodeJs}  size=\"lg\" /></a></li>\n              <li><a class=\"btn-floating black tooltipped\" data-position=\"left\" data-tooltip=\"Github API\" href=\"https://docs.github.com/en/rest\" target=\"_blank\"><FontAwesomeIcon icon={faGithub}  size=\"lg\" /></a></li>\n              <li><a class=\"btn-floating white tooltipped\" data-position=\"left\" data-tooltip=\"Materialize\" href=\"https://materializecss.com/\" target=\"_blank\">\n              <img src=\"https://materializecss.com/images/favicon/favicon-32x32.png\" />\n              {/* <i class=\"material-icons\">attach_file</i> */}\n              </a></li>\n            </ul>\n        </div>\n        )\n    }\n}\n\nexport default FeatureDiscovery;","import React, { Component } from 'react';\nimport './App.css';\nimport SideBar from \"./SideBar\";\nimport Content from \"./Content\";\nimport FeatureDiscovery from \"./FeatureDiscovery\";\n\n//const API=\"https://api.github.com/users\";\nclass App extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      username: 'satokora',\n      src: 'https://www.linkedin.com/in/satokokora/'\n  };\n  }\n  fetchLinkedinProfile(username) { \n    // // Import the module in your file\n    // var ScrapeLinkedin = require(\"scrape-linkedin\");\n    \n    // // Create the scraper object\n    // var scrapper = new ScrapeLinkedin(\n    //   {\n    //     debug: true\n    //   }\n    // );\n    \n    // // Fetch a profile\n    // scrapper.fetch(username)\n    // .then((res) => res.json() )\n    // // Handle the result\n    // .then(profile => console.log(profile))\n    // // Handle an error\n    // .catch(err => console.log(err));\n  }\n  async componentDidMount() {\n    this.fetchLinkedinProfile(this.state.username);\n    \n  }\nrender(){\n  return (\n    <div className=\"App\">\n    <div className=\"off-canvas off-canvas-sidebar-show\">\n      <SideBar></SideBar>\n      <div className=\"off-canvas-content\">\n        <div className=\"docs-content\">\n          <div className=\"container\">\n          \n            <Content>\n              \n            </Content>\n            <FeatureDiscovery></FeatureDiscovery>\n          </div>\n\n          </div>\n          \n        </div>\n\n      </div>\n      \n      </div>\n      \n    \n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}